q()
?read
?read.table
q
q()
a=1
q()
example("plot")
example(plot)
clear()
clearPushBack()
help("read.table",help_type="text")
2+8
120:155
120:155
sqrt(4)
data(package = "datasets")
?iris
iris
r<-6
r
r=4
r
r
rm(r)
rm(a)
q()
A = rbind(c(1,-1,-1,0), c(3,-2,-3,-1), c(1,1,1,0), c(0,0,2,1))
print(A)
print(eigen(A))
# setting working directory
# getwd()
# setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
#legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
#legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
#legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lty = 1, lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lty = 0.5, lwd=3)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lty = 0.25, lwd=3)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lty = 0.25, lwd=1)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lty = 0.25, lwd=1)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
3
1
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", bty = 'n', legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
legend("topright+", bty = 'n', legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
legend("right", bty = 'n', legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
legend("top", bty = 'n', legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("top", bty = 'n', legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", bty = 'n',text.width = 1, legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
legend("topright", bty = 'n',text.width = 3, legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
legend("topright", bty = 'n',text.width = 3.5, legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", bty = 'n',text.width = 3.5, legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
# setting working directory
# getwd()
setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
essence = read.table("essence.txt",header=TRUE)
seuil = 31 # 31L/100km
moyenne = mean(essence$conso)
cat("Moyenne empirique :",round(moyenne, digits = 2))
ecart_type = sd(essence$conso)
cat("Ecart-type empirique :",round(ecart_type, digits = 2))
variable_no_biais_1 = var(essence$conso)
variance_no_biais_2 = ecart_type**2
cat("Variance no biais 1 :",round(variable_no_biais_1, digits = 2))
cat("Variance no biais 2 :",round(variance_no_biais_2, digits = 2))
nb_echant = dim(essence)[1] # 1 : indice de la 1ere colonne : nb lignes
variance_biais = variable_no_biais_1*(nb_echant-1)/nb_echant
cat("Variance biaisée :",round(variance_biais, digits = 2))
# Histogramme de l'echantillon
hist(essence$conso, prob=TRUE, main = "Histogramme et densité normale", ylim = c(0, 0.25))
# Ajout de la moyenne empiriquesur l'histo
abline(v=moyenne, col="blue",lwd=3)
abline(v=seuil, col="red",lwd=3)
legend("topright", bty = 'n',text.width = 3, legend=c("Moyenne empirique", "Seuil testé"), col=c("blue", "red"), lwd=3)
curve(dnorm(x,mean=moyenne,sd=ecart_type),col="black",lwd=2,add=TRUE)
guerison = read.table("guerison.txt",header=TRUE)
View(guerison)
View(guerison)
n_echantillon_g
# proportion empirique
n_echantillon_g = dim(guerison)[1]
n_echantillon_g
n_gueris = sum(guerison$guerison==1)
proportion_emp = n_gueris/n_echantillon_g
print(mean(guerison$guerison))
alpha = 0.05
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(p_estim*(1-p_estim)/n_gueris)
round(icinf,digits=2)
## [1] 0.72
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(p_estim*(1-p_estim)/n_gueris)
round(icsup,digits=2)
## [1] 0.83
# setting working directory
# getwd()
# setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
guerison = read.table("guerison.txt",header=TRUE)
# proportion empirique
n_echantillon_g = dim(guerison)[1]
n_gueris = sum(guerison$guerison==1)
proportion_emp = n_gueris/n_echantillon_g # --> proportion estimée
#print(mean(guerison$guerison))
# Intervalle de confiance - Bornes inf et sup
alpha = 0.05
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-p_estim)/n_gueris)
round(icinf,digits=2)
## [1] 0.72
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-p_estim)/n_gueris)
round(icsup,digits=2)
## [1] 0.83
# setting working directory
# getwd()
# setwd("/Users/jean-martial/Desktop/UTT/MS_BDAAD_FORMATION/RStudio")
guerison = read.table("guerison.txt",header=TRUE)
# proportion empirique
n_echantillon_g = dim(guerison)[1]
n_gueris = sum(guerison$guerison==1)
proportion_emp = n_gueris/n_echantillon_g # --> proportion estimée
#print(mean(guerison$guerison))
# Intervalle de confiance - Bornes inf et sup
alpha = 0.05
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icinf,digits=2)
## [1] 0.72
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icsup,digits=2)
## [1] 0.83
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
prop.test(proportion_emp, n_echantillon_g, conf.level = 1-alpha)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
# Intervalle de confiance exacte - X loi binomiale (~ petits echantillons)
binom.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
alpha = 0.10
# Intervalle de confiance asymptotique - Bornes inf et sup
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icinf,digits=2)
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icsup,digits=2)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
# --- ou 2e methode ---
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
# Intervalle de confiance exacte - X loi binomiale (~ petits echantillons)
binom.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
alpha = 0.10
# Intervalle de confiance asymptotique - Bornes inf et sup
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icinf,digits=2)
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icsup,digits=2)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
# --- ou 2e methode ---
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
# Intervalle de confiance exacte - X loi binomiale (~ petits echantillons)
binom.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
alpha = 0.15
# Intervalle de confiance asymptotique - Bornes inf et sup
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icinf,digits=2)
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icsup,digits=2)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
# --- ou 2e methode ---
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
# Intervalle de confiance exacte - X loi binomiale (~ petits echantillons)
binom.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
alpha = 0.2
# Intervalle de confiance asymptotique - Bornes inf et sup
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icinf,digits=2)
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icsup,digits=2)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
# --- ou 2e methode ---
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
# Intervalle de confiance exacte - X loi binomiale (~ petits echantillons)
binom.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
alpha = 0.1
# Intervalle de confiance asymptotique - Bornes inf et sup
icinf <- proportion_emp-qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icinf,digits=2)
icsup <- proportion_emp+qnorm(p=1-alpha/2)*sqrt(proportion_emp*(1-proportion_emp)/n_gueris)
round(icsup,digits=2)
cat("Intervalle de confiance asymptotique : [",round(icinf,digits=2),", ",round(icsup,digits=2),"]")
# --- ou 2e methode ---
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
# Intervalle de confiance exacte - X loi binomiale (~ petits echantillons)
binom.test(n_gueris, n_echantillon_g, conf.level = 1-alpha)
t.test(moyenne, conf.level = 1-alpha)
t.test(essence, conf.level = 1-alpha)
alpha <- 0.15
# icinf <- moyenne-qt(p=1-alpha/2,df=n_essence-1)*ecart_type/sqrt(nb_echant)
# round(icinf,digits=2)
#
# icsup <- moyenne+qt(p=1-alpha/2,df=n_essence-1)*ecart_type/sqrt(nb_echant)
# round(icsup,digits=2)
t.test(essence, conf.level = 1-alpha)
## Intervalle de confiance de la moyenne theorique
# -----------------------------------------------
alpha <- 0.25
t.test(essence, conf.level = 1-alpha)
alpha <- 0.05
# icinf <- moyenne-qt(p=1-alpha/2,df=n_essence-1)*ecart_type/sqrt(nb_echant)
# round(icinf,digits=2)
#
# icsup <- moyenne+qt(p=1-alpha/2,df=n_essence-1)*ecart_type/sqrt(nb_echant)
# round(icsup,digits=2)
t.test(essence, conf.level = 1-alpha)
binf = (nb_echant-1)*(ecart_type**2)/qchisq(p=1-alpha/2, df=nb_echant-1)
rm(binf)
binf_var = (nb_echant-1)*(ecart_type**2)/qchisq(p=1-alpha/2, df=nb_echant-1)
rm(binf_var)
binf_var_estim = (nb_echant-1)*(ecart_type**2)/qchisq(p=1-alpha/2, df=nb_echant-1)
bsup_var_estim = (nb_echant-1)*(ecart_type**2)/qchisq(p=alpha/2, df=nb_echant-1)
# on retrouve l'intervalle avec la formule
library(EnvStats)
# on retrouve l'intervalle avec la formule
varTest(essence$conso,conf.level=1-alpha)
# on retrouve l'intervalle avec la formule
install.packages(EnvStats)
# on retrouve l'intervalle avec la formule
install.packages('EnvStats')
varTest(essence$conso,conf.level=1-alpha)
# on retrouve l'intervalle avec la formule
# install.packages('EnvStats')
library(EnvStats)
varTest(essence$conso,conf.level=1-alpha)
prop.test(essence, alternative = "greater", conf.level = 1-alpha)
prop.test(n_gueris, n_echantillon_g, conf.level = 1-alpha, alternative = 'greater')
prop.test(n_gueris, n_echantillon_g, alternative = 'greater')
prop.test(n_gueris, n_echantillon_g, p = 0.75, alternative = 'greater')
t.test(essence$conso, mu = 31, alternative = 'two.sided')
varTest(essence$conso, sigma.squared = 4.5, alternative = 'greater')
